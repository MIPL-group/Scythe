//http://stackoverflow.com/questions/40171795/postgres-group-by-looking-at-dates-ranges

#input

| Employee | FromDate   |  ToDate    | Code |
|-------------------------------------------|
| Employee | 01/07/2016 | 31/07/2016 |    4 |
| Employee | 01/06/2016 | 30/06/2016 |    2 |
| Employee | 01/05/2016 | 31/05/2016 |    2 |
| Employee | 01/04/2016 | 30/04/2016 |    3 |
| Employee | 01/03/2016 | 31/03/2016 |    3 |
| Employee | 01/02/2016 | 29/02/2016 |    4 |
| Employee | 01/01/2016 | 31/01/2016 |    4 |

#output

| Employee | FromDate   |  ToDate    | Code |
|-------------------------------------------|
| Employee | 01/05/2016 | 30/06/2016 |    2 |
| Employee | 01/03/2016 | 30/04/2016 |    3 |
| Employee | 01/01/2016 | 31/07/2016 |    4 |

#constraint
{
	"constants": [],
	"aggregation_functions": ["min", "max"]
}

# solution

select t1.Employee, t1.mindt, t2.maxdt, t1.code
from
(select min(FromDate), Code, Employee
from t
group by Employee, Code) t1
join
(select max(ToDate), Code, Employee
from t
group by Employee, Code) t2
on t1.code = t2.code